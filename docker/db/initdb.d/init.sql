DROP SCHEMA IF EXISTS dev;

CREATE SCHEMA dev DEFAULT CHARACTER
SET
	utf8mb4 COLLATE utf8mb4_general_ci;

USE dev;

DROP TABLE IF EXISTS stores;
DROP TABLE IF EXISTS merge_stores;
DROP TABLE IF EXISTS chains;
DROP TABLE IF EXISTS menu;
DROP TABLE IF EXISTS images;
DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS allergens;
DROP TABLE IF EXISTS allergen_options;
DROP TABLE IF EXISTS menu_allergens;
DROP TABLE IF EXISTS menu_allergen_options;
DROP TABLE IF EXISTS sessions;

CREATE TABLE
	chains (
		id INT (10) NOT NULL AUTO_INCREMENT,
		name VARCHAR(40) NOT NULL,
		url VARCHAR(40),
		deleted BOOLEAN NOT NULL DEFAULT FALSE,
		updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
		created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
		PRIMARY KEY(id)
	);

CREATE TABLE
	stores (
		id INT (10) NOT NULL AUTO_INCREMENT,
		name VARCHAR(40) NOT NULL,
		address VARCHAR(100) NOT NULL,
		chain_id INT(10) DEFAULT NULL,
		url VARCHAR(40),
		deleted BOOLEAN NOT NULL DEFAULT FALSE,
		updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
		created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
		PRIMARY KEY(id),
		FOREIGN KEY(chain_id) REFERENCES chains(id)
	);

CREATE TABLE
	merge_stores (
		from_id INT(10) NOT NULL,
		to_id INT(10) NOT NULL,
		deleted BOOLEAN NOT NULL DEFAULT FALSE,
		updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
		created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
		PRIMARY KEY(from_id, to_id),
		FOREIGN KEY(from_id) REFERENCES stores(id),
		FOREIGN KEY(to_id) REFERENCES stores(id)

	);

CREATE TABLE
	menu (
		id INT(10) NOT NULL AUTO_INCREMENT,
		name VARCHAR(40) NOT NULL,
		store_id INT(10) DEFAULT NULL,
		chain_id INT(10) DEFAULT NULL,
		deleted BOOLEAN NOT NULL DEFAULT FALSE,
		updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
		created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
		PRIMARY KEY(id),
		FOREIGN KEY(store_id) REFERENCES stores(id),
		FOREIGN KEY(chain_id) REFERENCES chains(id)
	);

CREATE TABLE
	image (
		id INT (10) NOT NULL AUTO_INCREMENT,
		menu_id INT(10) DEFAULT NULL,
		store_id INT(10) DEFAULT NULL,
		chain_id INT(10) DEFAULT NULL,
		file_name VARCHAR(40) NOT NULL,
		deleted BOOLEAN NOT NULL DEFAULT FALSE,
		updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
		created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
		PRIMARY KEY(id),
		FOREIGN KEY(menu_id) REFERENCES menu(id),
		FOREIGN KEY(store_id) REFERENCES stores(id),
		FOREIGN KEY(chain_id) REFERENCES chains(id)
	);

CREATE TABLE
	comments (
		id INT (10) NOT NULL AUTO_INCREMENT,
		title VARCHAR(40) NOT NULL,
		content TEXT NOT NULL,
		store_id INT(10) DEFAULT NULL,
		deleted BOOLEAN NOT NULL DEFAULT FALSE,
		updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
		created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
		PRIMARY KEY(id),
		FOREIGN KEY(store_id) REFERENCES stores(id)
	);

CREATE TABLE
	allergens (
		id VARCHAR(40) NOT NULL,
		name VARCHAR(40) NOT NULL,
		deleted BOOLEAN NOT NULL DEFAULT FALSE,
		updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
		created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
		PRIMARY KEY(id)
	);

CREATE TABLE
	allergen_options (
		id INT(10) NOT NULL AUTO_INCREMENT,
		allergen_id VARCHAR(40) NOT NULL,
		name VARCHAR(40) NOT NULL,
		deleted BOOLEAN NOT NULL DEFAULT FALSE,
		updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
		created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
		PRIMARY KEY(id),
		FOREIGN KEY(allergen_id) REFERENCES allergens(id)
	);

CREATE TABLE
	menu_allergens (
		allergen_id VARCHAR(40) NOT NULL,
		menu_id INT(10) NOT NULL,
		deleted BOOLEAN NOT NULL DEFAULT FALSE,
		updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
		created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
		PRIMARY KEY(allergen_id, menu_id),
		FOREIGN KEY(allergen_id) REFERENCES allergens(id),
		FOREIGN KEY(menu_id) REFERENCES menu(id)
	);

CREATE TABLE
	menu_allergen_options (
		allergen_option_id INT(10) NOT NULL,
		menu_id INT(10) NOT NULL,
		deleted BOOLEAN NOT NULL DEFAULT FALSE,
		updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
		created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
		PRIMARY KEY(allergen_option_id, menu_id),
		FOREIGN KEY(allergen_option_id) REFERENCES allergen_options(id),
		FOREIGN KEY(menu_id) REFERENCES menu(id)
	);

INSERT INTO
	allergens (id, name)
VALUES
	("egg", "卵"),
	("milk", "乳製品"),
	("wheat", "小麦"),
	("shrimp", "エビ"),
	("crab", "カニ"),
	("soba", "そば"),
	("peanut", "落花生");
